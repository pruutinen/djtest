{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"join",
				"join_obj"
			],
			[
				"re",
				"referral"
			],
			[
				"ref",
				"ref_id"
			],
			[
				"e",
				"emai"
			],
			[
				"ob",
				"obj"
			],
			[
				"Ji",
				"Join"
			],
			[
				"get",
				"get_ref_id"
			],
			[
				"ge",
				"get_ref_id"
			],
			[
				"s",
				"str"
			],
			[
				"ip",
				"ip_adress"
			],
			[
				"for",
				"forms"
			],
			[
				"Join",
				"JoinAdmin"
			],
			[
				"url",
				"urlpatterns"
			],
			[
				"text",
				"text-align"
			],
			[
				"h",
				"h3	Tag"
			]
		]
	},
	"buffers":
	[
		{
			"file": "DjangoWebsite/urls.py",
			"settings":
			{
				"buffer_size": 1088,
				"line_ending": "Unix"
			}
		},
		{
			"file": "joins/admin.py",
			"settings":
			{
				"buffer_size": 261,
				"line_ending": "Unix"
			}
		},
		{
			"file": "joins/models.py",
			"settings":
			{
				"buffer_size": 615,
				"line_ending": "Unix"
			}
		},
		{
			"file": "joins/forms.py",
			"settings":
			{
				"buffer_size": 301,
				"line_ending": "Windows"
			}
		},
		{
			"file": "joins/views.py",
			"settings":
			{
				"buffer_size": 2299,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# !/usr/bin/python\n\n\"\"\" this is test comment\n\"\"\"\nimport sys, getopt, os, re\n\n\n\n\"\"\"\nprint 'Number of arguments:', len(sys.argv), 'arguments.'\nprint 'Argument List:', str(sys.argv)\n\nprint '1.arg= ', str(sys.argv[1])\nprint '2.arg= ', str(sys.argv[2])\nprint 'pituus= ', str (len(sys.argv[1]))\n   StringToTest = str(sys.argv[1])\n   str_len = len(sys.argv[1])\n\n\"\"\"\n\ndef IsPalindromePython(str):\n    if str == str[::-1]:\n        retval = True\n    else:\n        retval = False\n\n    if retval == True:\n        print str + \" is PALINDROME\"\n    else:\n        print str + \" is NOT PALINDROME\"\n\n    return retval\n\n\n\ndef IsPalindrome(str, str_len):\n    for index in range(str_len):\n        if str[index] == str[str_len - index - 1]:\n            retval = True\n        else:\n            retval = False\n            break\n\n    return retval\n\n\"\"\"\nwhile True:\n\n    StringToTest = raw_input(\"Please input string to test: \")\n\n    #StringToTest = str(sys.argv[1])\n    #str_len = len(sys.argv[1])\n    str_len = len(StringToTest)\n\n    # ret = IsPalindrome(StringToTest, str_len)\n    ret = IsPalindromePython(StringToTest)\n\n    if ret == True:\n        print StringToTest + \" is PALINDROME\"\n    else:\n        print StringToTest + \" is NOT PALINDROME\"\n \n    answer = raw_input(\"Do you like to continue [Yes], [No]?\")\n    if answer in (\"N\", \"No\"):\n        break\n    os.system('cls')\n\n \"\"\"   \n\n\n\n\n\n            \ndef main(argv):\n    inputfile = ''\n    myline = ''\n    myname= ''\n    \n    \n\n    try:\n        opts, args = getopt.getopt(argv,\"hi:o:\",[\"ifile=\",\"ofile=\"])\n    except getopt.GetoptError:\n        print 'test.py -i <inputfile> -o <outputfile>'\n        sys.exit(2)\n    for opt, arg in opts:\n        if opt == '-h':\n            print 'test.py -i <inputfile> -o <outputfile>'\n            sys.exit()\n        elif opt in (\"-i\", \"--ifile\"):\n            inputfile = arg\n\n    with open(inputfile) as f:\n        content = f.read().splitlines()\n\n\n    for line in content:\n        words = line.split()\n        for word in words:\n            IsPalindromePython(word)\n                \n    \n\n\n\n     \n  #  for line in content:\n        \n   #     line.split(' ')\n    #    print list(line)\n        \n        #\n      #  for words in line:\n       #     IsPalindromePython(words)\n\n            \n    #content.split(' ')\n\n\n\n\n    \"\"\"\n    for line in content:\n        if re.match(\"(.*)(P|p)etteri(.*)\", line):\n            myline = line\n\n    myline = myline.split(' ')\n\n    print myline[1] + \" \" +  myline[0]\n   \n\n   # StringToTest = content[0]\n    #    print content[1]\n\n\n\n  \n    ret = IsPalindrome(StringToTest, len(StringToTest))\n\n    if ret == True:\n        print StringToTest + \" is PALINDROME\"\n    else:\n        print StringToTest + \" is NOT PALINDROME\"\n\n\n    \"\"\"\n\nif __name__ == \"__main__\":\n   main(sys.argv[1:])\n",
			"file": "/H/MyApps/PythonPalindrome/PythonPalindrome/PythonPalindrome.py",
			"file_size": 2920,
			"file_write_time": 131090887600000000,
			"settings":
			{
				"buffer_size": 2770,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Petteri/koodaus/C#/Fish/Fish/Solution.cs",
			"settings":
			{
				"buffer_size": 1862,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/share.html",
			"settings":
			{
				"buffer_size": 130,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/base.html",
			"settings":
			{
				"buffer_size": 3182,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/home.html",
			"settings":
			{
				"buffer_size": 237,
				"line_ending": "Windows"
			}
		},
		{
			"file": "DjangoWebsite/settings.py",
			"settings":
			{
				"buffer_size": 3225,
				"line_ending": "Unix"
			}
		},
		{
			"file": "DjangoWebsite/middleware.py",
			"settings":
			{
				"buffer_size": 353,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Petteri/Django/DjangoWebsite",
		"/C/Petteri/Django/DjangoWebsite/DjangoWebsite",
		"/C/Petteri/Django/DjangoWebsite/joins",
		"/C/Petteri/Django/DjangoWebsite/templates"
	],
	"file_history":
	[
		"/C/Petteri/Django/DjangoWebsite/joins/apps.py",
		"/C/Petteri/Django/DjangoWebsite/joins/models.py",
		"/C/Petteri/Django/DjangoWebsite/joins/migrations/0008_auto_20160920_1626.py",
		"/C/Petteri/Django/DjangoWebsite/joins/migrations/0006_auto_20160920_1625.py",
		"/C/Petteri/Django/DjangoWebsite/joins/migrations/0003_auto_20160920_1557.py",
		"/C/Petteri/Django/DjangoWebsite/joins/migrations/0004_auto_20160920_1610.py",
		"/C/Petteri/Django/DjangoWebsite/joins/migrations/0005_auto_20160920_1616.py",
		"/C/Petteri/Django/DjangoWebsite/DjangoWebsite/views.py",
		"/C/Petteri/Django/DjangoWebsite/templates/navbar.html",
		"/C/Petteri/Django/DjangoWebsite/templates/home2.html",
		"/C/Users/pruut/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Petteri/FrontEndTools/myprojects/angular2-quickstart/package.json",
		"/C/Petteri/FrontEndTools/myprojects/angular2-quickstart/app/app.component.ts",
		"/C/Petteri/FrontEndTools/myprojects/angular2-quickstart/app/app.module.ts",
		"/C/Petteri/FrontEndTools/myprojects/angular2-quickstart/app/main.ts",
		"/C/Petteri/FrontEndTools/myprojects/angular2-quickstart/index.html",
		"/C/Petteri/FrontEndTools/myprojects/angular2-quickstart/styles.css",
		"/C/Petteri/FrontEndTools/myprojects/angular2-quickstart/systemjs.config.js",
		"/C/Petteri/FrontEndTools/myprojects/angular2-quickstart/tsconfig.json",
		"/C/Petteri/FrontEndTools/myprojects/angular2-quickstart/typings.json"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"print"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "DjangoWebsite/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1088,
						"regions":
						{
						},
						"selection":
						[
							[
								1040,
								1040
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "joins/admin.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 261,
						"regions":
						{
						},
						"selection":
						[
							[
								261,
								261
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "joins/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 615,
						"regions":
						{
						},
						"selection":
						[
							[
								606,
								612
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "joins/forms.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 301,
						"regions":
						{
						},
						"selection":
						[
							[
								290,
								290
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "joins/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2299,
						"regions":
						{
						},
						"selection":
						[
							[
								792,
								792
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/H/MyApps/PythonPalindrome/PythonPalindrome/PythonPalindrome.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2770,
						"regions":
						{
						},
						"selection":
						[
							[
								1451,
								1381
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Petteri/koodaus/C#/Fish/Fish/Solution.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1862,
						"regions":
						{
						},
						"selection":
						[
							[
								534,
								534
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 675.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "templates/share.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 130,
						"regions":
						{
						},
						"selection":
						[
							[
								130,
								130
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "templates/base.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3182,
						"regions":
						{
						},
						"selection":
						[
							[
								2233,
								2233
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 990.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "templates/home.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 237,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "DjangoWebsite/settings.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3225,
						"regions":
						{
						},
						"selection":
						[
							[
								1552,
								1552
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 675.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "DjangoWebsite/middleware.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 353,
						"regions":
						{
						},
						"selection":
						[
							[
								198,
								198
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "WebSiteProjectSources.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
